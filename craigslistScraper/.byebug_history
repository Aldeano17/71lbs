continue
clear
all_houses
all_houses.text
all_houses.last
all_houses.second
all_houses.first
all_houses.count
continue
pagination
pagination.text
all_houses_in_page.text
all_houses_in_page.count
continue
houses_per_page.count
exit
continue
l = parsed_testnext_page = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('a')[0].attributes["href"].value
parsed_test = Nokogiri::HTML(test)
test = HTTParty.get(next_url)
next_page_url
next_url
continue
next_page_url
continue
next_page_url
continue
next_page_url
exit
continue
while
page.text
p
continue
clear
page
page.to_f
page
continue
clear
total_post.first.text.to_f / houses_per_page.count.to_f
houses_per_page.count.to_f
houses_per_page.to_f
houses_per_page.text
houses_per_page.count
total_post.first.text.to_f / houses_per_page
total_post.first.text.to_f
total_post.first.text
total_post.count
continue
total_pages.first.text.to_i
total_pages.count
total_pages.first.text.to_i
total_pages.firstg.text.to_i
total_pages.text.first.to_i
total_pages.text.to_i
total_pages.to_i
total_pages.first.to_i
houses_per_page.count
total_pages.text
all_pages.text
continue
houses
next_page = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('a')[0].attributes["href"].value
next_page = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('a')[0]
continue
next_page = parsed_page.css('span.buttons').css('span.pagenum').css('a')[0].attributes["href"].value
next_page = parsed_page.css('span.buttons').css('span.pagenum').css('a')[0].attribute["href"].value
next_page = parsed_page.css('span.buttons').css('span.pagenum').css('a').attribute["href"].value
next_page = parsed_page.css('span.buttons').css('span.pagenum').css('a').attributes["href"].value
next_page = parsed_page.css('span.buttons')
continue
clear
all_houses.first.css('span.result-price').first.text
all_houses.first.css('span.result-price').text
all_houses.first.css('span.result-price')
all_houses.first.text
all_houses.first
all_houses.first.css('span.price')
all_houses.first.price.text
all_houses.first.text
all_houses.first
all_houses.count
continue
all_houses = parsed_page.css('div.content').css('ul.rows').css('li.result-row')
all_houses = parsed_page.css('div.content').css('ul.rows')
all_houses = parsed_page.css('div.content')
continue
lastPage
continue
totalHouses
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.text.to_i
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.text.split(' ')
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.text.split()
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.text.split('" ')
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.text.split('"')
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.text.split('"')[1].to_i
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.text.split('3')
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.text.split('"')
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first.to_i
totalHouses.to_int
totalHouses.to_i
totalHouses.text
totalHouses.count
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount').first
totalHouses.count
totalHouses.text
totalHouses = parsed_page.css('section.page-container').css('form.search-form').css('div.search-legend').css('div.paginator').css('span.buttons').css('span.pagenum').css('span.totalcount')
housesPerPage
continue
houses3x2
huses3x2
continue
houses.first
houses.count
houses = parsed_page.css('div.content').css('ul.rows').css('li.result-row')
parsed_page.css('div.content').css('ul.rows').css('li.result-row')
parsed_page.css('div.content').css('ul.rows').css('li.results-row')
parsed_page.css('div.content').css('ul.rows')
parsed_page.css('div.content')
continue
caller
clear
parsed_page.css('div.content')
houses3x2 = parsed_page.css('ul.li.result-row')
houses3x2 = parsed_page.css('li.result-row')
continue
unparsed_page
url
parsed_page
continue
clear
housed3x2.count
houses.count
parsed_page
housed3x2 = parsed_page.css('result-row')
continue
parsed_page
houses
houses = parsed_page.css('div.result-row')
houses = parsed_page('div.result-row')
continue
unparsed_page
url
